parameters:
  build_type: ''

steps:
  - script: |
      yarn install
    displayName: yarn install

  # `Npm publish` will call `packages/react-native/scripts/prepack.js`, which will build codegen if needed
  # Let's just do it first anyway.
  - script: |
      set -eox pipefail
      cd packages/react-native-codegen
      yarn build
    displayName: yarn build

  # Extra steps needed for *-stable releases
  - ${{ if eq( parameters['build_type'], 'release') }}:
    - task: CmdLine@2
      displayName: Set latest tag
      inputs:
        script: |
          LATEST=true
          echo "Set latest to: $LATEST"
      condition: eq(variables['Build.SourceBranchName'], variables.latestStableBranch)

    - task: CmdLine@2
      displayName: Set next package version
      inputs:
        script: |
          echo "##vso[task.setvariable variable=RNM_PACKAGE_VERSION]$(node .ado/get-next-semver-version.js)"
          echo "Next package version: $RNM_PACKAGE_VERSION"

    - task: CmdLine@2
      displayName: Prepare React Native macOS release
      inputs:
        script: |
          set -eox pipefail
          node scripts/releases/set-version.js $RNM_PACKAGE_VERSION
          # A followup mutable yarn install is needed to update the lock since version numbers have changes
          yarn install --mode=update-lockfile
          # `update-lockfile` skips the linking step, so we need to run `yarn install` again
          yarn install


