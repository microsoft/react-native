# This file defines the build steps to publish a release
name: $(Date:yyyyMMdd).$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
      - main
      - '*-stable'
  paths:
    exclude:
      - package.json

pr: none

variables:
  - template: /.ado/variables/vars.yml@self
  - group: React-native-macos Secrets
  - group: InfoSec-SecurityResults
  - name: tags
    value: production,externalfacing

resources:
  repositories:
    - repository: OfficePipelineTemplates
      type: git
      name: 1ESPipelineTemplates/OfficePipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/Office.Official.PipelineTemplate.yml@OfficePipelineTemplates
  parameters:
    pool:
      name: Azure-Pipelines-1ESPT-ExDShared
      image: windows-latest
      os: windows
    sdl:
      componentgovernance:
        ignoreDirectories: $(Build.SourcesDirectory)/packages/helloworld
      credscan:
        suppressionsFile: .ado/CredScanSuppressions.json
      eslint:
        configuration: 'recommended'
        parser: '@typescript-eslint/parser'
        parserOptions: ''
        enableExclusions: true
        # Justification: js files in this repo are flow files. the built-in eslint does not support this. Adding a separate step to run the sdl rules for flow files.
        exclusionPatterns: '**/*.js'
    stages:
      - stage: main
        jobs:
         - job: RNGithubNpmJSPublish
           displayName: NPM Publish React-native-macos
           pool:
             name: cxeiss-ubuntu-20-04-large
             image: cxe-ubuntu-20-04-1es-pt
             os: linux
           variables:
             - name: BUILDSECMON_OPT_IN
               value: true
           timeoutInMinutes: 90 # how long to run the job before automatically cancelling
           cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
           templateContext:
             outputs:
               - output: pipelineArtifact
                 targetPath: $(System.DefaultWorkingDirectory)
                 artifactName: github-npm-js-publish
           steps:
             - checkout: self # self represents the repo where the initial Pipelines YAML file was found
               clean: true # whether to fetch clean each time
               fetchFilter: blob:none # partial clone for faster clones while maintaining history
               persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

             - template: /.ado/templates/npm-publish.yml@self

             # Set the git tag and push the version update back to Github

             - template: .ado/templates/configure-git.yml@self

             - task: CmdLine@2
               displayName: 'Tag and push to Github'
               inputs:
                 script: node .ado/gitTagRelease.js
               env:
                 BUILD_STAGINGDIRECTORY: $(Build.StagingDirectory)
                 BUILD_SOURCEBRANCH: $(Build.SourceBranch)
                 SYSTEM_ACCESSTOKEN: $(System.AccessToken)
                 githubAuthToken: $(githubAuthToken)
               condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'main'))

         - job: RNMacOSInitNpmJSPublish
           displayName: NPM Publish beachball packages (e.g., react-native-macos-init)
           pool:
             name: cxeiss-ubuntu-20-04-large
             image: cxe-ubuntu-20-04-1es-pt
             os: linux
           timeoutInMinutes: 90 # how long to run the job before automatically cancelling
           cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
           templateContext:
             outputs:
               - output: pipelineArtifact
                 targetPath: $(System.DefaultWorkingDirectory)
                 artifactName: macos-init-npm-js-publish
           steps:
             - checkout: self # self represents the repo where the initial Pipelines YAML file was found
               clean: true # whether to fetch clean each time
               # fetchDepth: 2 # the depth of commits to ask Git to fetch
               lfs: false # whether to download Git-LFS files
               submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
               persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

             - template: .ado/templates/configure-git.yml@self

             - task: CmdLine@2
               displayName: yarn install
               inputs:
                 script: |
                   cd packages/react-native-macos-init
                   yarn install

             - task: CmdLine@2
               displayName: Build react-native-macos-init
               inputs:
                 script: |
                   cd packages/react-native-macos-init
                   yarn build

             - task: CmdLine@2
               displayName: Code tested in other pipeline [test]
               inputs:
                 script: echo "This code is tested as part of an integration test. See the 'Verify react-native-macos-init' task."

             - task: CmdLine@2
               displayName: "Publish beachball packages to npmjs.org"
               inputs:
                 script: |
                   npx beachball publish --scope '!packages/react-native' --branch origin/$(Build.SourceBranchName) -n $(npmAuthToken) -yes -m "applying package updates ***NO_CI***" --access public
