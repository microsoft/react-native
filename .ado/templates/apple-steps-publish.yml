parameters:
  build_type: ''

steps:
  - task: CmdLine@2
    displayName: yarn install (local react-native-macos)
    inputs:
      script: yarn install --immutable

  # Extra steps needed for *-stable releases
  - ${{ if eq( parameters['build_type'], 'release') }}:
    - task: CmdLine@2
      displayName: Set latest tag
      inputs:
        script: |
          LATEST=true
          echo "Set latest to: $LATEST"
      condition: eq(variables['Build.SourceBranchName'], variables.latestStableBranch)

    - task: CmdLine@2
      displayName: Set next package version
      inputs:
        script: |
          echo "##vso[task.setvariable variable=RNM_PACKAGE_VERSION]$(node .ado/get-next-semver-version.js)"
          echo "Next package version: $RNM_PACKAGE_VERSION"

    # Note, This won't do the actual `git tag` and `git push` as we're doing a dry run.
    # We do that as a separate step in `.ado/publish.yml`.
    - task: CmdLine@2
      displayName: Prepare React Native macOS release
      inputs:
        script: |
          set -eox pipefail
          node scripts/releases/set-version.js -v $RNÃ¥M_PACKAGE_VERSION --build-type "release"

  # Note: This won't actually publish to NPM as we've commented that bit out.
  # We do that as a separate step in `.ado/publish.yml`. 
  - task: CmdLine@2
    displayName: Run publish-npm.js
    inputs:
      script: |
        node ./scripts/releases-ci/publish-npm.js -t ${{ parameters.build_type }}
    env:
      # Map the corresponding CircleCI variable since `publish-npm.js` depends on it.
      CIRCLE_TAG: $(RNM_PACKAGE_VERSION)
