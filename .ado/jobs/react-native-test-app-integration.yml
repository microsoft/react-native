jobs:
  - job: react_native_test_app
    displayName: react-native-test-app
    pool:
      vmImage: $(VmImageApple)
    workspace:
      clean: all
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 5
    steps:
      - template: /.ado/templates/apple-tools-setup.yml@self
      - bash: |
          echo "##vso[task.setvariable variable=package_version]$(cat package.json | jq .version | awk '{ print substr($0, 2, length($0) - 2) }')"
          echo "##vso[task.setvariable variable=react_version]$(cat package.json | jq .peerDependencies.react)"
          echo "##vso[task.setvariable variable=rncli_version]$(cat package.json | jq '.dependencies."@react-native-community/cli"')"
          echo "##vso[task.setvariable variable=rncli_android_version]$(cat package.json | jq '.dependencies."@react-native-community/cli-platform-android"')"
          echo "##vso[task.setvariable variable=rncli_ios_version]$(cat package.json | jq '.dependencies."@react-native-community/cli-platform-ios"')"
        displayName: 'Determine react-native-macos version'
        workingDirectory: packages/react-native
      - bash: |
          npm pack ./packages/react-native
        displayName: 'Pack react-native-macos'
      - bash: |
          git clone --progress https://github.com/microsoft/react-native-test-app.git
        displayName: Checkout react-native-test-app
      - bash: |
          set -eo pipefail
          cat package.json |
            jq '.devDependencies["react"] = $(react_version)' |
            jq '.devDependencies["react-native"] = "^0.71"' |
            jq '.devDependencies["react-native-macos"] = "../react-native-macos-$(package_version).tgz"' |
            jq 'del(.devDependencies["@react-native-community/cli"])' |
            jq 'del(.devDependencies["@react-native-community/cli-platform-android"])' |
            jq 'del(.devDependencies["@react-native-community/cli-platform-ios"])' |
            jq 'del(.devDependencies["react-native-windows"])' > .package.json
          mv .package.json package.json
          cat package.json | jq .devDependencies
        displayName: Modify react-native-test-app dependencies
        workingDirectory: react-native-test-app
      - bash: |
          set -eo pipefail
          cat package.json |
            jq '.devDependencies["@react-native-community/cli"] = $(rncli_version)' |
            jq '.devDependencies["@react-native-community/cli-platform-android"] = $(rncli_android_version)' |
            jq '.devDependencies["@react-native-community/cli-platform-ios"] = $(rncli_ios_version)' |
            jq '.devDependencies["react"] = $(react_version)' |
            jq '.devDependencies["react-native"] = "^0.71"' |
            jq '.devDependencies["react-native-macos"] = "../../react-native-macos-$(package_version).tgz"' |
            jq 'del(.devDependencies["react-native-windows"])' > .package.json
          mv .package.json package.json
          cat package.json | jq .devDependencies
        displayName: Modify example app dependencies
        workingDirectory: react-native-test-app/example
      - template: /.ado/templates/verdaccio-init.yml@self
      - bash: |
          npx beachball publish --branch origin/$(System.PullRequest.TargetBranch) --no-push --registry http://localhost:4873 --yes --access public
        displayName: Publish beachball packages to verdaccio
      - bash: |
          cat .yarnrc.yml | sed 's_^npmRegistryServer: ".*"$_npmRegistryServer: "http://localhost:4873"_' > .yarnrc.yml.copy
          rm .yarnrc.yml
          mv .yarnrc.yml.copy .yarnrc.yml
          echo -e '\nunsafeHttpWhitelist: ["localhost"]' >> .yarnrc.yml
        displayName: Point react-native-test-app registry to verdaccio server
        workingDirectory: react-native-test-app
      - bash: |
          yarn --no-immutable
        displayName: Install npm dependencies
        workingDirectory: react-native-test-app
      - bash: |
          yarn build:macos || yarn build:macos
        displayName: Bundle JavaScript
        workingDirectory: react-native-test-app/example
      - bash: |
          rm macos/Podfile.lock
          pod install --project-directory=macos
        displayName: Install Pods
        workingDirectory: react-native-test-app/example
      - bash: |
          set -eo pipefail
          ../scripts/xcodebuild.sh macos/Example.xcworkspace build | xcbeautify
        displayName: Build Intel
        workingDirectory: react-native-test-app/example
        env:
          CCACHE_DISABLE: 1
      - bash: |
          set -eo pipefail
          ../scripts/xcodebuild.sh macos/Example.xcworkspace clean
          ../scripts/xcodebuild.sh macos/Example.xcworkspace build ARCHS=arm64 | xcbeautify
        displayName: Build ARM
        workingDirectory: react-native-test-app/example
        env:
          CCACHE_DISABLE: 1
