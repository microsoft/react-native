# This file defines the build steps to publish a release
name: $(Date:yyyyMMdd).$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
      - main
      - '*-stable'
  paths:
    exclude:
      - package.json

pr: none

variables:
  - template: variables/vars.yml
  - group: React-native-macos Secrets
  - group: InfoSec-SecurityResults
  - name: tags
    value: production,externalfacing

jobs:
  - job: RNGithubNpmJSPublish
    displayName: NPM Publish React-native-macos
    pool:
      vmImage: $(VmImageApple)
    variables:
      - name: BUILDSECMON_OPT_IN
        value: true
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    dependsOn:
      - Compliance
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - ${{ if eq(variables['isMain'], true) }}:
        - template: templates/apple-job-publish.yml
          parameters:
            build_type: nightly
      - ${{ elseif eq(variables['isReleaseBranch'], true) }}:
        - template: templates/apple-job-publish.yml
          parameters:
            build_type: release
      - ${{ else }}:
        - task: CmdLine@2
          displayName: Unknown branch, skipping publish
          inputs:
            script: |
              echo "Skipping publish for branch $(Build.SourceBranchName)"
              exit 1

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: ðŸ“’ Publish Manifest
        inputs:
          artifactName: SBom-RNGithubNpmJSPublish-$(System.JobAttempt)
          targetPath: $(System.DefaultWorkingDirectory)/_manifest

  - job: RNMacOSInitNpmJSPublish
    displayName: NPM Publish react-native-macos-init
    pool: cxeiss-ubuntu-20-04-large
    timeoutInMinutes: 90 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 5 # how much time to give 'run always even if cancelled tasks' before killing them
    condition: eq(variables['Build.SourceBranchName'], 'main')
    dependsOn:
      - Compliance
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        # fetchDepth: 2 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

      - template: templates/apple-install-dependencies.yml

      - template: templates/apple-release-setup.yml

      - task: CmdLine@2
        displayName: Build react-native-macos-init
        inputs:
          script: |
            cd packages/react-native-macos-init
            yarn build

      - task: CmdLine@2
        displayName: Code tested in other pipeline [test]
        inputs:
          script: echo "This code is tested as part of an integration test. See the 'Verify react-native-macos-init' task."

      - task: CmdLine@2
        displayName: "Publish react-native-macos-init to npmjs.org"
        inputs:
          script: |
            npx beachball publish --branch origin/$(Build.SourceBranchName) -n $(npmAuthToken) -yes -m "applying package updates ***NO_CI***" --access public

      # beachball modifies the package.json files so run manifest generation after it.
      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)

      - task: PublishPipelineArtifact@1
        displayName: ðŸ“’ Publish Manifest
        inputs:
          artifactName: SBom-RNMacOSInitNpmJSPublish-$(System.JobAttempt)
          targetPath: $(System.DefaultWorkingDirectory)/_manifest

  - job: Compliance
    displayName: React-Native GitHub Compliance pipeline
    pool: OE-OfficePublic
    timeoutInMinutes: 15 # how long to run the job before automatically cancelling
    steps:
      - checkout: self # self represents the repo where the initial Pipelines YAML file was found
        clean: true # whether to fetch clean each time
        fetchDepth: 10 # the depth of commits to ask Git to fetch
        lfs: false # whether to download Git-LFS files
        submodules: recursive # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
        persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch
